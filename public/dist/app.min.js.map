{"version":3,"sources":["app.js","appController.js","appConfig.js","account/accountController.js","account/accountModule.js","cardShops/cardShopsModule.js","home/homeController.js","home/homeModule.js","search/searchController.js","search/searchFactory.js","search/searchModule.js","tradeBinders/tradeBindersController.js","tradeBinders/tradeBindersDirective.js","tradeBinders/tradeBindersFactory.js","tradeBinders/tradeBindersModule.js","account/login/loginController.js","account/login/loginModule.js","account/auth/UserService.js","account/register/registerController.js","account/register/registerModule.js"],"names":["angular","module","run","$rootScope","$state","$http","$templateCache","store","jwtHelper","$on","e","to","data","requiresLogin","get","isTokenExpired","preventDefault","go","cache","appController","UserService","logout","controller","config","jwtInterceptorProvider","$httpProvider","$stateProvider","tokenGetter","interceptors","push","state","accountController","url","templateUrl","resolve","$locationProvider","HomeController","vm","this","loggedIn","isLoggedIn","user","currentUser","secure","then","response","alert","message","error","controllerAs","SearchController","SearchFactory","cards","searchSubmit","name","getCards","success","dataResponse","search","method","skipAuthorization","factory","TradeBindersController","TradeBindersFactory","sortType","sortReverse","addCards","length","addList","removeCard","card","upOwnedQuantity","upOwnedCardQuantity","lowerOwnedQuantity","lowerOwnedCardQuantity","upWantQuantity","upWantCardQuantity","lowerWantQuantity","lowerWantCardQuantity","upForTradeQuantity","upForTradeCardQuantity","lowerForTradeQuantity","lowerForTradeCardQuantity","tradeBindersDirective","restrict","template","link","scope","el","attrs","$","popover","trigger","html","content","cardImage","placement","directive","Collection","names","split","forEach","line","CardName","num","Quantity","filter","foundCard","toUpperCase","editions","multiverse_id","image_url","ownedQuantity","forTrade","want","image","index","indexOf","splice","possibleNum","substring","isNaN","Number","replace","trim","LoginController","login","dataLoading","username","password","reset","loginSubmit","remove","register","post","handleSuccess","handleError","payload","decodeToken","set","token","RegisterController","email","console","log","registerSubmit"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('app', [\n        'ui.router',\n        'angular-jwt',\n        'angular-storage',\n        'home',\n        'tradeBinders',\n        'account',\n        'cardShops',\n        'search',\n        //'app.appController',\n        'app.appConfig'\n    ])\n            .run(['$rootScope', '$state', '$http', '$templateCache', 'store', 'jwtHelper', function ($rootScope, $state, $http, $templateCache, store, jwtHelper) {\n                    $rootScope.$on('$stateChangeStart', function (e, to) {\n                        if (to.data && to.data.requiresLogin) {\n                            if (!store.get('jwt') || jwtHelper.isTokenExpired(store.get('jwt'))) {\n                                e.preventDefault();\n                                $state.go('login');\n                            }\n                        }\n                        $http.get('app/account/register/register.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/account/login/login.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/tradeBinders/tradeBinders.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/search/search.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/cardShops/cardShops.html', {\n                            cache: $templateCache\n                        });\n                    });\n                }]);\n\n})();\n","(function () {\n    'use strict';\n\n    angular.module('app.appController', ['account.UserService'])\n            .controller('appController', ['UserService', '$state', appController]);\n    \n    function appController(UserService, $state) {\n        UserService.logout();\n        $state.go('home');\n    }\n\n})();","(function () {\n    'use strict';\n\n    angular.module('app.appConfig', [\n        'angular-jwt',\n        'app.appController'\n    ])\n\n            .config(['jwtInterceptorProvider', '$httpProvider', '$stateProvider',\n                function (jwtInterceptorProvider, $httpProvider, $stateProvider) {\n\n                    jwtInterceptorProvider.tokenGetter = ['store', function (store) {\n                            return store.get('jwt');\n                        }];\n\n                    $httpProvider.interceptors.push('jwtInterceptor');\n\n                    $stateProvider\n                            .state('logout', {\n                                controller: 'appController'\n                            });\n                }]);\n\n})();\n\n\n","(function () {\n    'use strict';\n\n    angular.module('account.accountController', [])\n            .controller('accountController', [accountController]);\n\n    function accountController() {\n      //nothing yet\n    }\n\n})();","(function () {\n  'use strict';\n\n  angular.module('account', [\n      'account.accountController', \n      'account.register', \n      'account.login'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('account', {\n      url: '/tradeBinder/account',\n      templateUrl: 'app/account/account.html',\n      controller: 'accountController',\n      resolve: [],\n      data: {\n        requiresLogin: true\n      }\n    });\n  }]);\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('cardShops', [])\n            .config(['$stateProvider', '$locationProvider', function ($stateProvider, $locationProvider) {\n                    $stateProvider\n                            .state('cardShops', {\n                                url: '/tradeBinder/cardShops',\n                                templateUrl: 'app/cardShops/cardShops.html',\n                                resolve: []\n                            });\n                }]);\n\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('home.HomeController', [\n      'account.UserService'\n  ])\n  .controller('HomeController',['$http', 'UserService',  HomeController]);\n\n  function HomeController($http, UserService) {\n    var vm = this;\n\n    vm.loggedIn = UserService.isLoggedIn();\n    vm.user = UserService.currentUser();\n\n    vm.secure = function () {\n      return $http.get('/api/secure')\n      .then(function(response) { alert(response.data.message); },\n      function (error) { alert('You\\'re not authed'); });\n    };\n\n  }\n  \n})();\n","(function () {\n  'use strict';\n\n  angular.module('home', [\n      'home.HomeController'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'app/home/home.html',\n      controller: 'HomeController',\n      controllerAs: 'home',\n      resolve: []\n    });\n  }]);\n  \n})();\n","(function () {\n    'use strict';\n\n    angular.module('search.SearchController', [\n        'search.SearchFactory'\n    ])\n            .controller('SearchController', ['SearchFactory', SearchController]);\n\n    function SearchController(SearchFactory) {\n        var vm = this;\n\n        vm.cards = [];\n\n        vm.searchSubmit = function (name) {\n\n            SearchFactory.getCards(name).success(function (dataResponse) {\n                vm.cards = dataResponse;\n            });\n\n            vm.search = '';\n        };\n    }\n\n})();\n\n","(function () {\n    'use strict';\n\n    angular\n            .module('search.SearchFactory', [])\n            .factory('SearchFactory', ['$http', SearchFactory]);\n\n    function SearchFactory($http) {\n        //var url = \"https://api.deckbrew.com/mtg/cards?name=\";\n\n        var SearchFactory = {};\n\n        SearchFactory.getCards = function (name) {\n            return $http({\n                method: 'GET',\n                url: \"https://api.deckbrew.com/mtg/cards?name=\" + name + \"\",\n                skipAuthorization: true\n            });\n        };\n\n        return SearchFactory;\n    }\n    \n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('search', [\n      'search.SearchController'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('search', {\n      url: '/tradeBinder/search',\n      templateUrl: 'app/search/search.html',\n      controller: 'SearchController',\n      controllerAs: 'search',\n      resolve: []\n    });\n  }]);\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('tradeBinders.TradeBindersController', ['TradeBinder.TradeBindersFactory'])\n            .controller('TradeBindersController', ['TradeBindersFactory', TradeBindersController]);\n\n    function TradeBindersController(TradeBindersFactory) {\n        var vm = this;\n\n        vm.cards = TradeBindersFactory.getCards();\n        \n        vm.sortType = 'name';\n        vm.sortReverse = false;\n        \n\n        vm.addCards = function (cards) {\n            if (cards.length > 0) {\n                TradeBindersFactory.addCards(cards);\n                vm.cards = TradeBindersFactory.getCards();\n\n                vm.addList = [];\n            }\n        };\n\n        vm.removeCard = function (card) {\n            TradeBindersFactory.removeCard(card);\n        };\n\n        vm.upOwnedQuantity = function (card) {\n            TradeBindersFactory.upOwnedCardQuantity(card);\n        };\n\n        vm.lowerOwnedQuantity = function (card) {\n            TradeBindersFactory.lowerOwnedCardQuantity(card);\n        };\n\n        vm.upWantQuantity = function (card) {\n            TradeBindersFactory.upWantCardQuantity(card);\n        };\n\n        vm.lowerWantQuantity = function (card) {\n            TradeBindersFactory.lowerWantCardQuantity(card);\n        };\n\n        vm.upForTradeQuantity = function (card) {\n            TradeBindersFactory.upForTradeCardQuantity(card);\n        };\n\n        vm.lowerForTradeQuantity = function (card) {\n            TradeBindersFactory.lowerForTradeCardQuantity(card);\n        };\n\n    }\n})();","(function () {\n    'use strict';\n    angular.module('tradeBinders.tradeBindersDirective', [])\n            .directive('tradeBindersDirective', [tradeBindersDirective]);\n\n    function tradeBindersDirective() {\n        return{\n            restrict: 'A',\n            template: '<span>{{name}}</span>',\n            link: function (scope, el, attrs) {\n                scope.name = attrs.name;\n                $(el).popover({\n                    trigger: 'hover',\n                    html: true,\n                    content: '<img src=' + attrs.cardImage + '>',\n                    placement: \"bottom\"\n                });\n            }\n        };\n    }\n})();","(function () {\n    'use strict';\n    angular.module('TradeBinder.TradeBindersFactory', ['search.SearchFactory'])\n            .factory('TradeBindersFactory',['SearchFactory', TradeBindersFactory]);\n\n    function TradeBindersFactory(SearchFactory) {\n        var Collection = [];\n\n        return{\n            getCards: function () {\n                return Collection;\n            },\n            addCards: function (names) {\n                names.split('\\n')\n                        .forEach(function (line) {\n\n                            var card = {\n                                name: CardName(line),\n                                num: Quantity(line)\n                            };\n\n                            SearchFactory.getCards(CardName(line))\n                                    .success(function (dataResponse) {\n                                        dataResponse\n                                                .filter(function (foundCard) {\n                                                    return foundCard.name.toUpperCase() === card.name.toUpperCase();\n                                                })\n                                                .forEach(function (foundCard) {\n\n                                                    var cardImage;\n                                                    if (foundCard.editions[0].multiverse_id !== 0) {\n                                                        cardImage = foundCard.editions[0].image_url;\n                                                    } else {\n                                                        cardImage = foundCard.editions[1].image_url;\n                                                    }\n                                                    Collection.push({\n                                                        name: foundCard.name,\n                                                        ownedQuantity: card.num,\n                                                        forTrade: 0,\n                                                        want: 0,\n                                                        image: cardImage\n                                                    });\n                                                });\n                                    });\n                        });\n            },\n            removeCard: function (name) {\n                var index = Collection.indexOf(name);\n                Collection.splice(index, 1);\n            },\n            upOwnedCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].ownedQuantity += 1;\n            },\n            lowerOwnedCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].ownedQuantity >= 1) {\n                    Collection[indexOf].ownedQuantity -= 1;\n                }\n            },\n             upWantCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].want += 1;\n            },\n            lowerWantCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].want >= 1) {\n                    Collection[indexOf].want -= 1;\n                }\n            }, \n            upForTradeCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].forTrade += 1;\n            },\n            lowerForTradeCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].forTrade >= 1) {\n                    Collection[indexOf].forTrade -= 1;\n                }\n            }\n        };\n    }\n\n    var Quantity = function (line) {\n        var indexOf = line.indexOf(\" \");\n        var possibleNum = line.substring(0, indexOf);\n        if (!isNaN(possibleNum)) {\n            return Number(possibleNum);\n        } else {\n            return 1;\n        }\n\n    };\n\n    var CardName = function (line) {\n        var indexOf = line.indexOf(\" \");\n        var possibleNum = line.substring(0, indexOf);\n        if (!isNaN(possibleNum)) {\n            return line.substring(indexOf + 1).replace(/\\s+/g, ' ').trim();\n        } else {\n            return line;\n        }\n\n    };\n\n})(); ","(function () {\n    'use strict';\n\n    angular.module('tradeBinders', [\n        'tradeBinders.TradeBindersController',\n        'tradeBinders.tradeBindersDirective'\n    ])\n            .config(['$stateProvider', function ($stateProvider) {\n                    $stateProvider\n                            .state('tradeBinders', {\n                                url: '/tradeBinder/tradeBinders',\n                                templateUrl: 'app/tradeBinders/tradeBinders.html',\n                                controller: 'TradeBindersController',\n                                controllerAs: 'tradeBinder',\n                                resolve: []\n                            });\n                }]);\n})();\n","(function () {\n  'use strict';\n\n  angular.module('account.login.LoginController', [\n      'account.UserService'\n  ])\n  .controller('LoginController', ['$state', 'UserService', LoginController]);\n\n  function LoginController($state, UserService) {\n    var vm = this;\n\n    function login() {\n      vm.dataLoading = true;\n      var data = {\n        username: vm.username,\n        password: vm.password\n      };\n      UserService.login(data).then(function (response){\n        if (response.success) {\n          $state.go('home');\n        } else {\n          alert(response.message);\n          vm.dataLoading = false;\n        }\n        reset();\n      });\n    }\n\n    function reset() {\n      vm.username = '';\n      vm.password = '';\n    }\n\n    vm.loginSubmit = login;\n\n  }\n\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('account.login', [\n        'account.login.LoginController'\n    ])\n            .config(['$stateProvider', function ($stateProvider) {\n\n                    $stateProvider\n                            .state('login', {\n                                url: '/tradeBinder/login',\n                                templateUrl: 'app/account/login/login.html',\n                                controller: 'LoginController',\n                                controllerAs: 'login',\n                                resolve: []\n                            });\n                }]);\n\n})();","(function () {\n  'use strict';\n\n  angular\n  .module('account.UserService', [])\n  .factory('UserService', ['$http', 'store', 'jwtHelper', UserService]);\n\n  function UserService($http, store, jwtHelper) {\n    var user = {};\n\n    function logout() {\n      store.remove('jwt');\n    }\n\n    function register(data) {\n      logout();\n      return $http.post('/api/accounts/register', data).then(handleSuccess, handleError('Error creating user'));\n    }\n\n    function login(data) {\n      logout();\n      return $http.post('/api/accounts/login', data).then(handleSuccess, handleError('Error loggin in'));\n    }\n\n    function isLoggedIn() {\n      if (store.get('jwt')) { return !jwtHelper.isTokenExpired(store.get('jwt')); }\n\n      return false;\n    }\n\n    function currentUser() {\n      var payload;\n      if (isLoggedIn()) {\n        payload = jwtHelper.decodeToken(store.get('jwt'));\n        return payload.user;\n      }\n    }\n\n    function handleSuccess(response) {\n      store.set('jwt', response.data.token);\n\n      return { success: true,  data: response.data };\n    }\n\n    function handleError(error) {\n      return function () {\n        return { success: false, message: error };\n      };\n    }\n\n    user.register = register;\n    user.login = login;\n    user.logout = logout;\n    user.isLoggedIn = isLoggedIn;\n    user.currentUser = currentUser;\n\n    return user;\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('account.register.RegisterController', [\n      'account.UserService'\n  ])\n  .controller('RegisterController', ['$state', 'UserService', RegisterController]);\n\n  function RegisterController($state, UserService) {\n    var vm = this;\n\n    function register() {\n      vm.dataLoading = true;\n      var data = {\n        name: vm.name,\n        email: vm.email,\n        username: vm.username,\n        password: vm.password\n      };\n      \n      UserService.register(data).then(function (response) {\n        if (response.success) {\n          console.log('Success');\n          $state.go('home');\n        } else {\n          alert(response.message);\n          vm.dataLoading = false;\n        }\n      });\n      reset();\n    }\n\n    function reset() {\n      vm.name = '';\n      vm.email = '';\n      vm.username = '';\n      vm.password = '';\n    }\n\n    vm.registerSubmit = register;\n  }\n\n})();","(function () {\n  'use strict';\n\n  angular.module('account.register', [\n      'account.register.RegisterController'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('register', {\n      url: '/tradeBinder/register',\n      templateUrl: 'app/account/register/register.html',\n      controller: 'RegisterController',\n      controllerAs: 'register',\n      resolve: []\n    });\n  }]);\n  \n})();"],"sourceRoot":"/source/"}
{"version":3,"sources":["app.js","appController.js","appConfig.js","account/accountController.js","account/accountModule.js","cardShops/cardShopsModule.js","home/homeController.js","home/homeModule.js","search/searchController.js","search/searchFactory.js","search/searchModule.js","tradeBinders/tradeBindersController.js","tradeBinders/tradeBindersDirective.js","tradeBinders/tradeBindersFactory.js","tradeBinders/tradeBindersModule.js","account/auth/UserService.js","account/register/registerController.js","account/register/registerModule.js","account/login/loginController.js","account/login/loginModule.js"],"names":["angular","module","run","$rootScope","$state","$http","$templateCache","store","jwtHelper","$on","e","to","data","requiresLogin","get","isTokenExpired","preventDefault","go","cache","appController","UserService","vm","this","logout","reload","current","name","params","controller","config","jwtInterceptorProvider","$httpProvider","tokenGetter","interceptors","push","accountController","$stateProvider","state","url","templateUrl","resolve","$locationProvider","HomeController","loggedIn","isLoggedIn","user","currentUser","secure","then","response","alert","message","error","controllerAs","SearchController","SearchFactory","cards","searchSubmit","getCards","success","dataResponse","search","method","skipAuthorization","factory","TradeBindersController","TradeBindersFactory","sortType","sortReverse","addCards","length","addList","removeCard","card","upOwnedQuantity","upOwnedCardQuantity","lowerOwnedQuantity","lowerOwnedCardQuantity","upWantQuantity","upWantCardQuantity","lowerWantQuantity","lowerWantCardQuantity","upForTradeQuantity","upForTradeCardQuantity","lowerForTradeQuantity","lowerForTradeCardQuantity","tradeBindersDirective","restrict","template","link","scope","el","attrs","$","popover","trigger","html","content","cardImage","placement","directive","Collection","names","split","forEach","line","CardName","num","Quantity","filter","foundCard","toUpperCase","editions","multiverse_id","image_url","ownedQuantity","forTrade","want","image","index","indexOf","splice","possibleNum","substring","isNaN","Number","replace","trim","remove","register","post","handleSuccess","handleError","login","payload","decodeToken","set","token","RegisterController","dataLoading","email","username","password","console","log","reset","registerSubmit","LoginController","loginSubmit"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('app', [\n        'ui.router',\n        'angular-jwt',\n        'angular-storage',\n        'home',\n        'tradeBinders',\n        'account',\n        'cardShops',\n        'search',\n        'app.appConfig'\n    ])\n            .run(['$rootScope', '$state', '$http', '$templateCache', 'store', 'jwtHelper',\n                function ($rootScope, $state, $http, $templateCache, store, jwtHelper) {\n\n                    $rootScope.$on('$stateChangeStart', function (e, to) {\n                                                                     \n                        if (to.data && to.data.requiresLogin) {\n                            if (!store.get('jwt') || jwtHelper.isTokenExpired(store.get('jwt'))) {\n                                e.preventDefault();\n                                $state.go('login');\n                            }\n                        }\n                        $http.get('app/account/register/register.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/account/login/login.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/tradeBinders/tradeBinders.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/search/search.html', {\n                            cache: $templateCache\n                        });\n                        $http.get('app/cardShops/cardShops.html', {\n                            cache: $templateCache\n                        });\n                    });\n                }]);\n\n})();\n","(function () {\n    'use strict';\n\n    angular.module('app.appController', ['account.UserService'])\n            .controller('appController', ['UserService', '$state', appController]);\n\n    function appController(UserService, $state) {\n        var vm = this;\n        \n        vm.logout = function () {\n\n            UserService.logout();\n            $state.go('home');\n            reload($state);\n\n        };\n\n    }\n    \n    function reload($state){\n        $state.go($state.current.name, $state.params, { reload: true });\n    }\n\n})();","(function () {\n    'use strict';\n\n    angular.module('app.appConfig', [\n        'angular-jwt',\n        'app.appController'\n    ])\n\n            .config(['jwtInterceptorProvider', '$httpProvider', \n                function (jwtInterceptorProvider, $httpProvider) {\n\n                    jwtInterceptorProvider.tokenGetter = ['store', function (store) {\n                            return store.get('jwt');\n                        }];\n\n                    $httpProvider.interceptors.push('jwtInterceptor');\n\n                }]);\n\n})();\n\n\n","(function () {\n    'use strict';\n\n    angular.module('account.accountController', [])\n            .controller('accountController', [accountController]);\n\n    function accountController() {\n      //nothing yet\n    }\n\n})();","(function () {\n  'use strict';\n\n  angular.module('account', [\n      'account.accountController', \n      'account.register', \n      'account.login'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('account', {\n      url: '/tradeBinder/account',\n      templateUrl: 'app/account/account.html',\n      controller: 'accountController',\n      resolve: [],\n      data: {\n        requiresLogin: true\n      }\n    });\n  }]);\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('cardShops', [])\n            .config(['$stateProvider', '$locationProvider', function ($stateProvider, $locationProvider) {\n                    $stateProvider\n                            .state('cardShops', {\n                                url: '/tradeBinder/cardShops',\n                                templateUrl: 'app/cardShops/cardShops.html',\n                                resolve: []\n                            });\n                }]);\n\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('home.HomeController', [\n      'account.UserService'\n  ])\n  .controller('HomeController',['$http', 'UserService',  HomeController]);\n\n  function HomeController($http, UserService) {\n    var vm = this;\n\n    vm.loggedIn = UserService.isLoggedIn();\n    vm.user = UserService.currentUser();\n\n    vm.secure = function () {\n      return $http.get('/api/secure')\n      .then(function(response) { alert(response.data.message); },\n      function (error) { alert('You\\'re not authed'); });\n    };\n\n  }\n  \n})();\n","(function () {\n  'use strict';\n\n  angular.module('home', [\n      'home.HomeController'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'app/home/home.html',\n      controller: 'HomeController',\n      controllerAs: 'home',\n      resolve: []\n    });\n  }]);\n  \n})();\n","(function () {\n    'use strict';\n\n    angular.module('search.SearchController', [\n        'search.SearchFactory'\n    ])\n            .controller('SearchController', ['SearchFactory', SearchController]);\n\n    function SearchController(SearchFactory) {\n        var vm = this;\n\n        vm.cards = [];\n\n        vm.searchSubmit = function (name) {\n\n            SearchFactory.getCards(name).success(function (dataResponse) {\n                vm.cards = dataResponse;\n            });\n\n            vm.search = '';\n        };\n    }\n\n})();\n\n","(function () {\n    'use strict';\n\n    angular\n            .module('search.SearchFactory', [])\n            .factory('SearchFactory', ['$http', SearchFactory]);\n\n    function SearchFactory($http) {\n        //var url = \"https://api.deckbrew.com/mtg/cards?name=\";\n\n        var SearchFactory = {};\n\n        SearchFactory.getCards = function (name) {\n            return $http({\n                method: 'GET',\n                url: \"https://api.deckbrew.com/mtg/cards?name=\" + name + \"\",\n                skipAuthorization: true\n            });\n        };\n\n        return SearchFactory;\n    }\n    \n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('search', [\n      'search.SearchController'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('search', {\n      url: '/tradeBinder/search',\n      templateUrl: 'app/search/search.html',\n      controller: 'SearchController',\n      controllerAs: 'search',\n      resolve: []\n    });\n  }]);\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('tradeBinders.TradeBindersController', ['TradeBinder.TradeBindersFactory'])\n            .controller('TradeBindersController', ['TradeBindersFactory', TradeBindersController]);\n\n    function TradeBindersController(TradeBindersFactory) {\n        var vm = this;\n\n        vm.cards = TradeBindersFactory.getCards();\n        \n        vm.sortType = 'name';\n        vm.sortReverse = false;\n        \n\n        vm.addCards = function (cards) {\n            if (cards.length > 0) {\n                TradeBindersFactory.addCards(cards);\n                vm.cards = TradeBindersFactory.getCards();\n\n                vm.addList = [];\n            }\n        };\n\n        vm.removeCard = function (card) {\n            TradeBindersFactory.removeCard(card);\n        };\n\n        vm.upOwnedQuantity = function (card) {\n            TradeBindersFactory.upOwnedCardQuantity(card);\n        };\n\n        vm.lowerOwnedQuantity = function (card) {\n            TradeBindersFactory.lowerOwnedCardQuantity(card);\n        };\n\n        vm.upWantQuantity = function (card) {\n            TradeBindersFactory.upWantCardQuantity(card);\n        };\n\n        vm.lowerWantQuantity = function (card) {\n            TradeBindersFactory.lowerWantCardQuantity(card);\n        };\n\n        vm.upForTradeQuantity = function (card) {\n            TradeBindersFactory.upForTradeCardQuantity(card);\n        };\n\n        vm.lowerForTradeQuantity = function (card) {\n            TradeBindersFactory.lowerForTradeCardQuantity(card);\n        };\n\n    }\n})();","(function () {\n    'use strict';\n    angular.module('tradeBinders.tradeBindersDirective', [])\n            .directive('tradeBindersDirective', [tradeBindersDirective]);\n\n    function tradeBindersDirective() {\n        return{\n            restrict: 'A',\n            template: '<span>{{name}}</span>',\n            link: function (scope, el, attrs) {\n                scope.name = attrs.name;\n                $(el).popover({\n                    trigger: 'hover',\n                    html: true,\n                    content: '<img src=' + attrs.cardImage + '>',\n                    placement: \"bottom\"\n                });\n            }\n        };\n    }\n})();","(function () {\n    'use strict';\n    angular.module('TradeBinder.TradeBindersFactory', ['search.SearchFactory'])\n            .factory('TradeBindersFactory',['SearchFactory', TradeBindersFactory]);\n\n    function TradeBindersFactory(SearchFactory) {\n        var Collection = [];\n\n        return{\n            getCards: function () {\n                return Collection;\n            },\n            addCards: function (names) {\n                names.split('\\n')\n                        .forEach(function (line) {\n\n                            var card = {\n                                name: CardName(line),\n                                num: Quantity(line)\n                            };\n\n                            SearchFactory.getCards(CardName(line))\n                                    .success(function (dataResponse) {\n                                        dataResponse\n                                                .filter(function (foundCard) {\n                                                    return foundCard.name.toUpperCase() === card.name.toUpperCase();\n                                                })\n                                                .forEach(function (foundCard) {\n\n                                                    var cardImage;\n                                                    if (foundCard.editions[0].multiverse_id !== 0) {\n                                                        cardImage = foundCard.editions[0].image_url;\n                                                    } else {\n                                                        cardImage = foundCard.editions[1].image_url;\n                                                    }\n                                                    Collection.push({\n                                                        name: foundCard.name,\n                                                        ownedQuantity: card.num,\n                                                        forTrade: 0,\n                                                        want: 0,\n                                                        image: cardImage\n                                                    });\n                                                });\n                                    });\n                        });\n            },\n            removeCard: function (name) {\n                var index = Collection.indexOf(name);\n                Collection.splice(index, 1);\n            },\n            upOwnedCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].ownedQuantity += 1;\n            },\n            lowerOwnedCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].ownedQuantity >= 1) {\n                    Collection[indexOf].ownedQuantity -= 1;\n                }\n            },\n             upWantCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].want += 1;\n            },\n            lowerWantCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].want >= 1) {\n                    Collection[indexOf].want -= 1;\n                }\n            }, \n            upForTradeCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].forTrade += 1;\n            },\n            lowerForTradeCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].forTrade >= 1) {\n                    Collection[indexOf].forTrade -= 1;\n                }\n            }\n        };\n    }\n\n    var Quantity = function (line) {\n        var indexOf = line.indexOf(\" \");\n        var possibleNum = line.substring(0, indexOf);\n        if (!isNaN(possibleNum)) {\n            return Number(possibleNum);\n        } else {\n            return 1;\n        }\n\n    };\n\n    var CardName = function (line) {\n        var indexOf = line.indexOf(\" \");\n        var possibleNum = line.substring(0, indexOf);\n        if (!isNaN(possibleNum)) {\n            return line.substring(indexOf + 1).replace(/\\s+/g, ' ').trim();\n        } else {\n            return line;\n        }\n\n    };\n\n})(); ","(function () {\n    'use strict';\n\n    angular.module('tradeBinders', [\n        'tradeBinders.TradeBindersController',\n        'tradeBinders.tradeBindersDirective'\n    ])\n            .config(['$stateProvider', function ($stateProvider) {\n                    $stateProvider\n                            .state('tradeBinders', {\n                                url: '/tradeBinder/tradeBinders',\n                                templateUrl: 'app/tradeBinders/tradeBinders.html',\n                                controller: 'TradeBindersController',\n                                controllerAs: 'tradeBinder',\n                                resolve: []\n                            });\n                }]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n  .module('account.UserService', [])\n  .factory('UserService', ['$http', 'store', 'jwtHelper', UserService]);\n\n  function UserService($http, store, jwtHelper) {\n    var user = {};\n\n    function logout() {\n      store.remove('jwt');\n      //store.remove('profile');\n    }\n\n    function register(data) {\n      logout();\n      return $http.post('/api/auth/register', data).then(handleSuccess, handleError('Error creating user'));\n    }\n\n    function login(data) {\n      logout();\n      return $http.post('/api/auth/login', data).then(handleSuccess, handleError('Error loggin in'));\n    }\n\n    function isLoggedIn() {\n      if (store.get('jwt')) { return !jwtHelper.isTokenExpired(store.get('jwt')); }\n\n      return false;\n    }\n\n    function currentUser() {\n      var payload;\n      if (isLoggedIn()) {\n        payload = jwtHelper.decodeToken(store.get('jwt'));\n        return payload.user;\n      }\n    }\n\n    function handleSuccess(response) {\n      store.set('jwt', response.data.token);\n      return { success: true,  data: response.data };\n    }\n\n    function handleError(error) {\n      return function () {\n        return { success: false, message: error };\n      };\n    }\n\n    user.register = register;\n    user.login = login;\n    user.logout = logout;\n    user.isLoggedIn = isLoggedIn;\n    user.currentUser = currentUser;\n\n    return user;\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('account.register.RegisterController', [\n      'account.UserService'\n  ])\n  .controller('RegisterController', ['$state', 'UserService', RegisterController]);\n\n  function RegisterController($state, UserService) {\n    var vm = this;\n\n    function register() {\n      vm.dataLoading = true;\n      var data = {\n        name: vm.name,\n        email: vm.email,\n        username: vm.username,\n        password: vm.password\n      };\n      \n      UserService.register(data).then(function (response) {\n        if (response.success) {\n          console.log('Success');\n          $state.go('home');\n        } else {\n          alert(response.message);\n          vm.dataLoading = false;\n        }\n      });\n      reset();\n    }\n\n    function reset() {\n      vm.name = '';\n      vm.email = '';\n      vm.username = '';\n      vm.password = '';\n    }\n\n    vm.registerSubmit = register;\n  }\n\n})();","(function () {\n  'use strict';\n\n  angular.module('account.register', [\n      'account.register.RegisterController'\n  ])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('register', {\n      url: '/tradeBinder/register',\n      templateUrl: 'app/account/register/register.html',\n      controller: 'RegisterController',\n      controllerAs: 'register',\n      resolve: []\n    });\n  }]);\n  \n})();","(function () {\n  'use strict';\n\n  angular.module('account.login.LoginController', [\n      'account.UserService'\n  ])\n  .controller('LoginController', ['$state', 'UserService', LoginController]);\n\n  function LoginController($state, UserService) {\n    var vm = this;\n\n    function login() {\n      vm.dataLoading = true;\n      var data = {\n        username: vm.username,\n        password: vm.password\n      };\n      UserService.login(data).then(function (response){\n        if (response.success) {\n          $state.go('home');\n        } else {\n          alert(response.message);\n          vm.dataLoading = false;\n        }\n        reset();\n      });\n    }\n\n    function reset() {\n      vm.username = '';\n      vm.password = '';\n    }\n\n    vm.loginSubmit = login;\n\n  }\n\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('account.login', [\n        'account.login.LoginController'\n    ])\n            .config(['$stateProvider', function ($stateProvider) {\n\n                    $stateProvider\n                            .state('login', {\n                                url: '/tradeBinder/login',\n                                templateUrl: 'app/account/login/login.html',\n                                controller: 'LoginController',\n                                controllerAs: 'login',\n                                resolve: []\n                            });\n                }]);\n\n})();"],"sourceRoot":"/source/"}
{"version":3,"sources":["app.js","app/account/accountController.js","app/account/accountModule.js","app/cardShops/cardShopsModule.js","app/home/homeController.js","app/home/homeModule.js","app/search/searchController.js","app/search/searchFactory.js","app/search/searchModule.js","app/tradeBinders/tradeBindersController.js","app/tradeBinders/tradeBindersDirective.js","app/tradeBinders/tradeBindersFactory.js","app/tradeBinders/tradeBindersModule.js","app/account/auth/UserService.js","app/account/login/loginController.js","app/account/login/loginModule.js","app/account/register/registerController.js","app/account/register/registerModule.js"],"names":["appController","UserService","$state","logout","go","angular","module","controller","config","jwtInterceptorProvider","$httpProvider","$locationProvider","$stateProvider","tokenGetter","store","get","interceptors","push","state","run","$rootScope","$http","$templateCache","jwtHelper","$on","e","to","data","requiresLogin","isTokenExpired","preventDefault","cache","accountController","url","templateUrl","resolve","HomeController","vm","this","loggedIn","isLoggedIn","user","currentUser","secure","then","response","alert","message","error","controllerAs","SearchController","SearchFactory","cards","searchSubmit","name","getCards","success","dataResponse","search","method","skipAuthorization","factory","TradeBindersController","TradeBindersFactory","sortType","sortReverse","addCards","length","addList","removeCard","card","upOwnedQuantity","upOwnedCardQuantity","lowerOwnedQuantity","lowerOwnedCardQuantity","upWantQuantity","upWantCardQuantity","lowerWantQuantity","lowerWantCardQuantity","upForTradeQuantity","upForTradeCardQuantity","lowerForTradeQuantity","lowerForTradeCardQuantity","tradeBindersDirective","restrict","template","link","scope","el","attrs","$","popover","trigger","html","content","cardImage","placement","directive","Collection","names","split","forEach","line","CardName","num","Quantity","filter","foundCard","toUpperCase","editions","multiverse_id","image_url","ownedQuantity","forTrade","want","image","index","indexOf","splice","possibleNum","substring","isNaN","Number","replace","trim","remove","register","post","handleSuccess","handleError","login","payload","decodeToken","set","token","LoginController","dataLoading","username","password","reset","loginSubmit","RegisterController","email","console","log","registerSubmit"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    angular.module('app', [\n        'ui.router',\n        'angular-jwt',\n        'angular-storage',\n        'home',\n        'tradeBinders',\n        'account',\n        'account.UserService',\n        'cardShops',\n        'search'\n    ])\n            .controller('appController', ['UserService', '$state', appController])\n\n            .config(['jwtInterceptorProvider', '$httpProvider', '$locationProvider', '$stateProvider',\n                function myConfig(jwtInterceptorProvider, $httpProvider, $locationProvider, $stateProvider) {\n                    jwtInterceptorProvider.tokenGetter = function (store) {\n                        return store.get('jwt');\n                    };\n                    $httpProvider.interceptors.push('jwtInterceptor');\n\n                    $stateProvider\n                            .state('logout', {\n                                controller: 'appController',\n                            });\n\n                }])\n            .run(function ($rootScope, $state, $http, $templateCache, store, jwtHelper) {\n                $rootScope.$on('$stateChangeStart', function (e, to) {\n                    if (to.data && to.data.requiresLogin) {\n                        if (!store.get('jwt') || jwtHelper.isTokenExpired(store.get('jwt'))) {\n                            e.preventDefault();\n                            $state.go('login');\n                        }\n                    }\n                    $http.get('app/account/register/register.html', {\n                        cache: $templateCache\n                    });\n                    $http.get('app/account/login/login.html', {\n                        cache: $templateCache\n                    });\n                    $http.get('app/tradeBinders/tradeBinders.html', {\n                        cache: $templateCache\n                    });\n                    $http.get('app/search/search.html', {\n                        cache: $templateCache\n                    });\n                    $http.get('app/cardShops/cardShops.html', {\n                        cache: $templateCache\n                    });\n                });\n            });\n\n    function appController(UserService, $state) {\n        UserService.logout();\n        $state.go('home');\n    };\n\n\n})();\n","(function () {\n    'use strict';\n\n    angular.module('account.accountController', [])\n            .controller('accountController', [accountController]);\n\n    function accountController() {\n      //nothing yet\n    };\n\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('account', ['account.accountController', 'account.register', 'account.login'])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('account', {\n      url: '/tradeBinder/account',\n      templateUrl: 'app/account/account.html',\n      controller: 'accountController',\n      resolve: [],\n      data: {\n        requiresLogin: true\n      }\n    });\n  }]);\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('cardShops', ['ui.router'])\n            .config(['$stateProvider', '$locationProvider', function ($stateProvider, $locationProvider) {\n                    $stateProvider\n                            .state('cardShops', {\n                                url: '/tradeBinder/cardShops',\n                                templateUrl: 'app/cardShops/cardShops.html',\n                                resolve: []\n                            });\n                }]);\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('home.HomeController', ['account.UserService'])\n  .controller('HomeController',['$http', 'UserService',  HomeController]);\n\n  function HomeController($http, UserService) {\n    var vm = this;\n\n    vm.loggedIn = UserService.isLoggedIn();\n    vm.user = UserService.currentUser();\n\n    vm.secure = function () {\n      return $http.get('/api/secure')\n      .then(function(response) { alert(response.data.message); },\n      function (error) { alert('You\\'re not authed'); });\n    };\n\n\n  }\n})();\n","(function () {\n  'use strict';\n\n  angular.module('home', ['home.HomeController'])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'app/home/home.html',\n      controller: 'HomeController',\n      controllerAs: 'home',\n      resolve: []\n    });\n  }]);\n})();\n","(function () {\n    'use strict';\n\n    angular.module('search.SearchController', ['search.SearchFactory'])\n            .controller('SearchController', ['SearchFactory', SearchController]);\n\n    function SearchController(SearchFactory) {\n        var vm = this;\n\n        vm.cards = [];\n\n        vm.searchSubmit = function (name) {\n\n            SearchFactory.getCards(name).success(function (dataResponse) {\n                vm.cards = dataResponse;\n            });\n\n            vm.search = '';\n        };\n    }\n\n})();\n\n","(function () {\n  'use strict';\n  angular\n  .module('search.SearchFactory', [])\n  .factory('SearchFactory',['$http', SearchFactory]);\n\n  function SearchFactory($http) {\n    //var url = \"https://api.deckbrew.com/mtg/cards?name=\";\n\n    var SearchFactory = {};\n\n    SearchFactory.getCards = function (name) {\n      return $http({\n        method: 'GET',\n        url: \"https://api.deckbrew.com/mtg/cards?name=\" + name +\"\",\n        skipAuthorization: true\n      });\n    };\n\n    return SearchFactory;\n  }\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('search', ['ui.router', 'search.SearchController'])\n  .config(['$stateProvider', '$httpProvider', function ($stateProvider, $httpProvider) {\n    $stateProvider\n    .state('search', {\n      url: '/tradeBinder/search',\n      templateUrl: 'app/search/search.html',\n      controller: 'SearchController',\n      controllerAs: 'search',\n      resolve: []\n    });\n  }]);\n})();\n\n","(function () {\n    'use strict';\n\n    angular.module('tradeBinders.TradeBindersController', ['TradeBinder.TradeBindersFactory'])\n            .controller('TradeBindersController', [ 'TradeBindersFactory', TradeBindersController]);\n\n\n\n    function TradeBindersController(TradeBindersFactory) {\n        var vm = this;\n\n        vm.cards = TradeBindersFactory.getCards();\n        \n        vm.sortType = 'name';\n        vm.sortReverse = false;\n        \n\n        vm.addCards = function (cards) {\n            if (cards.length > 0) {\n                TradeBindersFactory.addCards(cards);\n                vm.cards = TradeBindersFactory.getCards();\n\n                vm.addList = [];\n            }\n        };\n\n        vm.removeCard = function (card) {\n            TradeBindersFactory.removeCard(card);\n        };\n\n        vm.upOwnedQuantity = function (card) {\n            TradeBindersFactory.upOwnedCardQuantity(card);\n        };\n\n        vm.lowerOwnedQuantity = function (card) {\n            TradeBindersFactory.lowerOwnedCardQuantity(card);\n        };\n\n        vm.upWantQuantity = function (card) {\n            TradeBindersFactory.upWantCardQuantity(card);\n        };\n\n        vm.lowerWantQuantity = function (card) {\n            TradeBindersFactory.lowerWantCardQuantity(card);\n        };\n\n        vm.upForTradeQuantity = function (card) {\n            TradeBindersFactory.upForTradeCardQuantity(card);\n        };\n\n        vm.lowerForTradeQuantity = function (card) {\n            TradeBindersFactory.lowerForTradeCardQuantity(card);\n        };\n\n    }\n})();","(function () {\n    'use strict';\n    angular.module('tradeBinders.tradeBindersDirective', ['ui.router'])\n            .directive('tradeBindersDirective', tradeBindersDirective);\n\n    function tradeBindersDirective() {\n        return{\n            restrict: 'A',\n            template: '<span>{{name}}</span>',\n            link: function (scope, el, attrs) {\n                scope.name = attrs.name;\n                $(el).popover({\n                    trigger: 'hover',\n                    html: true,\n                    content: '<img src=' + attrs.cardImage + '>',\n                    placement: \"bottom\"\n                });\n            }\n        };\n    };\n})();","(function () {\n    'use strict';\n    angular.module('TradeBinder.TradeBindersFactory', ['search.SearchFactory'])\n            .factory('TradeBindersFactory',['SearchFactory', TradeBindersFactory]);\n\n    function TradeBindersFactory(SearchFactory) {\n        var Collection = [];\n\n        return{\n            getCards: function () {\n                return Collection;\n            },\n            addCards: function (names) {\n                names.split('\\n')\n                        .forEach(function (line) {\n\n                            var card = {\n                                name: CardName(line),\n                                num: Quantity(line)\n                            };\n\n                            SearchFactory.getCards(CardName(line))\n                                    .success(function (dataResponse) {\n                                        dataResponse\n                                                .filter(function (foundCard) {\n                                                    return foundCard.name.toUpperCase() === card.name.toUpperCase();\n                                                })\n                                                .forEach(function (foundCard) {\n\n                                                    var cardImage;\n                                                    if (foundCard.editions[0].multiverse_id !== 0) {\n                                                        cardImage = foundCard.editions[0].image_url;\n                                                    } else {\n                                                        cardImage = foundCard.editions[1].image_url;\n                                                    }\n                                                    Collection.push({\n                                                        name: foundCard.name,\n                                                        ownedQuantity: card.num,\n                                                        forTrade: 0,\n                                                        want: 0,\n                                                        image: cardImage\n                                                    });\n                                                })\n                                    });\n                        });\n            },\n            removeCard: function (name) {\n                //console.log(name);\n                var index = Collection.indexOf(name);\n                //console.log(index);\n                Collection.splice(index, 1);\n                //console.log(Collection);\n            },\n            upOwnedCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].ownedQuantity += 1;\n            },\n            lowerOwnedCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].ownedQuantity >= 1) {\n                    Collection[indexOf].ownedQuantity -= 1;\n                }\n            },\n             upWantCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].want += 1;\n            },\n            lowerWantCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].want >= 1) {\n                    Collection[indexOf].want -= 1;\n                }\n            }, \n            upForTradeCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                Collection[indexOf].forTrade += 1;\n            },\n            lowerForTradeCardQuantity: function (name) {\n                var indexOf = Collection.indexOf(name);\n                if (Collection[indexOf].forTrade >= 1) {\n                    Collection[indexOf].forTrade -= 1;\n                }\n            }\n        };\n    }\n\n    var Quantity = function (line) {\n        var indexOf = line.indexOf(\" \");\n        var possibleNum = line.substring(0, indexOf);\n        if (!isNaN(possibleNum)) {\n            return Number(possibleNum);\n        } else {\n            return 1;\n        }\n\n    };\n\n    var CardName = function (line) {\n        var indexOf = line.indexOf(\" \");\n        var possibleNum = line.substring(0, indexOf);\n        if (!isNaN(possibleNum)) {\n            return line.substring(indexOf + 1).replace(/\\s+/g, ' ').trim();\n        } else {\n            return line;\n        }\n\n    };\n\n})(); ","(function () {\n    'use strict';\n\n    angular.module('tradeBinders', ['ui.router', 'tradeBinders.TradeBindersController', 'tradeBinders.tradeBindersDirective'])\n            .config(['$stateProvider', function ($stateProvider) {\n                    $stateProvider\n                            .state('tradeBinders', {\n                                url: '/tradeBinder/tradeBinders',\n                                templateUrl: 'app/tradeBinders/tradeBinders.html',\n                                controller: 'TradeBindersController',\n                                controllerAs: 'tradeBinder',\n                                resolve: []\n                            });\n                }]);\n})();\n","(function () {\n  'use strict';\n\n  angular\n  .module('account.UserService', [])\n  .factory('UserService', ['$http', 'store', 'jwtHelper', UserService]);\n\n  function UserService($http, store, jwtHelper) {\n    var user = {};\n\n    function logout() {\n      store.remove('jwt');\n    }\n\n    function register(data) {\n      logout();\n      return $http.post('/api/accounts/register', data).then(handleSuccess, handleError('Error creating user'));\n    }\n\n    function login(data) {\n      logout();\n      return $http.post('/api/accounts/login', data).then(handleSuccess, handleError('Error loggin in'));\n    }\n\n    function isLoggedIn() {\n      if (store.get('jwt')) { return !jwtHelper.isTokenExpired(store.get('jwt')); }\n\n      return false;\n    }\n\n    function currentUser() {\n      var payload;\n      if (isLoggedIn()) {\n        payload = jwtHelper.decodeToken(store.get('jwt'));\n        return payload.user;\n      }\n    }\n\n    function handleSuccess(response) {\n      store.set('jwt', response.data.token);\n\n      return { success: true,  data: response.data };\n    }\n\n    function handleError(error) {\n      return function () {\n        return { success: false, message: error };\n      };\n    }\n\n    user.register = register;\n    user.login = login;\n    user.logout = logout;\n    user.isLoggedIn = isLoggedIn;\n    user.currentUser = currentUser;\n\n    return user;\n  }\n\n})();\n","(function () {\n  'use strict';\n\n  angular.module('account.login.LoginController', ['account.UserService'])\n  .controller('LoginController', ['$state', 'UserService', LoginController]);\n\n  function LoginController($state, UserService) {\n    var vm = this;\n\n    function login() {\n      vm.dataLoading = true;\n      var data = {\n        username: vm.username,\n        password: vm.password\n      };\n      UserService.login(data).then(function (response){\n        if (response.success) {\n          $state.go('home');\n        } else {\n          alert(response.message);\n          vm.dataLoading = false;\n        }\n        reset();\n      });\n    }\n\n    function reset() {\n      vm.username = '';\n      vm.password = '';\n    }\n\n    vm.loginSubmit = login;\n\n  }\n\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('account.login', ['account.login.LoginController'])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('login', {\n      url: '/tradeBinder/login',\n      templateUrl: 'app/account/login/login.html',\n      controller: 'LoginController',\n      controllerAs: 'login',\n      resolve: []\n    });\n  }]);\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('account.register.RegisterController', ['account.UserService'])\n  .controller('RegisterController', ['$state', 'UserService', RegisterController]);\n\n  function RegisterController($state, UserService) {\n    var vm = this;\n\n    function register() {\n      vm.dataLoading = true;\n      var data = {\n        name: vm.name,\n        email: vm.email,\n        username: vm.username,\n        password: vm.password\n      };\n      UserService.register(data).then(function (response) {\n        if (response.success) {\n          console.log('Success');\n          $state.go('home');\n        } else {\n          alert(response.message);\n          vm.dataLoading = false;\n        }\n      });\n      reset();\n    }\n\n    function reset() {\n      vm.name = '';\n      vm.email = '';\n      vm.username = '';\n      vm.password = '';\n    }\n\n\n    vm.registerSubmit = register;\n  }\n\n})();\n\n","(function () {\n  'use strict';\n\n  angular.module('account.register', ['account.register.RegisterController'])\n  .config(['$stateProvider', function ($stateProvider) {\n    $stateProvider\n    .state('register', {\n      url: '/tradeBinder/register',\n      templateUrl: 'app/account/register/register.html',\n      controller: 'RegisterController',\n      controllerAs: 'register',\n      resolve: []\n    });\n  }]);\n})();\n\n"],"sourceRoot":"/source/"}